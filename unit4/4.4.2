;; The first three lines of this file were inserted by DrRacket. They record metadata
;; about the language level of this file in a form that our tools can easily process.
#reader(lib "htdp-beginner-reader.ss" "lang")((modname |4.4|) (read-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t constructor repeating-decimal #f #t none #f ())))
;;================;;
;; Exercise 4.4.2 ;;
;;================;;

;; tax: number -> number
;; to determine the amount of tax to be paid, given the gross pay

;; EXAMPLES
;; (tax 0) should be 0
;; (tax 240) should be 0
;; (tax 480) should be 72
;; (tax 100) should be 0
;; (tax 300) should be 45
;; (tax 500) should be 140

(define (tax gross-pay)
  (cond
    [(<= gross-pay 240) 0]
    [(<= gross-pay 480) (* gross-pay .15)]
    [else (* gross-pay .28)]))

;; EXAMPLES TURNED INTO TESTS
(= (tax 0) 0)
(= (tax 240) 0)
(= (tax 480) 72)
(= (tax 100) 0)
(= (tax 300) 45)
(= (tax 500) 140)

;; gross-pay: number -> number
;; to determine the gross pay for a falt hourly rate of $12, given the number of hours worked

;; EXAMPLES
;; (gross-pay 1) should be 12
;; (gross-pay 5) should be 60
(define (gross-pay hours)
  (* hours 12))

;; EXAMPLES TURNED INTO TESTS
(= (gross-pay 1) 12)
(= (gross-pay 5) 60)

;; netpay: number -> number
;; to determine the net pay (groos pay - taxes), given the number of hours worked

;; EXAMPLES
;; (netpay 1) should be 12
;; (netpay 40) should be 408

(define (netpay hours)
  (- (gross-pay hours) (tax (gross-pay hours))))

;; EXAMPLES TURNED INTO TESTS
(= (netpay 1) 12)
(= (netpay 40) 408)