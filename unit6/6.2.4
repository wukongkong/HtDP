;; The first three lines of this file were inserted by DrRacket. They record metadata
;; about the language level of this file in a form that our tools can easily process.
#reader(lib "htdp-beginner-reader.ss" "lang")((modname |6.2|) (read-case-sensitive #t) (teachpacks ((lib "draw.rkt" "teachpack" "htdp"))) (htdp-settings #(#t constructor repeating-decimal #f #t none #f ((lib "draw.rkt" "teachpack" "htdp")))))
;;================;;
;; Exercise 6.2.4 ;;
;;================;;

;; switch: symbol symbol -> boolean
;; to clear the bulb of the first colour and then draw to bulb of the second colour
(define (switch colour-off colour-on)
  (and (clear-bulb colour-off)
       (draw-bulb colour-on)))

; -------------------------------------------------------------------------

;; clear-bulb: symbol -> boolean
;; to turn off the matching bulb in the traffic light
(define (clear-bulb colour)
  (cond
    [(symbol=? colour 'red)
     (and (clear-solid-disk (make-posn X-BULBS Y-RED) BULB-RADIUS)
          (draw-circle (make-posn X-BULBS Y-RED) BULB-RADIUS colour))]
    [(symbol=? colour 'yellow)
     (and (clear-solid-disk (make-posn X-BULBS Y-YELLOW) BULB-RADIUS)
          (draw-circle (make-posn X-BULBS Y-YELLOW) BULB-RADIUS colour))]
    [(symbol=? colour 'green)
     (and (clear-solid-disk (make-posn X-BULBS Y-GREEN) BULB-RADIUS)
          (draw-circle (make-posn X-BULBS Y-GREEN) BULB-RADIUS colour))]))

; -------------------------------------------------------------------------

;; draw-bulb: symbol -> boolean
;; to turn on the matching bulb in the traffic light
(define (draw-bulb colour)
  (cond
    [(symbol=? colour 'red)
     (draw-solid-disk (make-posn X-BULBS Y-RED) BULB-RADIUS colour)]
    [(symbol=? colour 'yellow)
     (draw-solid-disk (make-posn X-BULBS Y-YELLOW) BULB-RADIUS colour)]
    [(symbol=? colour 'green)
     (draw-solid-disk (make-posn X-BULBS Y-GREEN) BULB-RADIUS colour)]))

; -------------------------------------------------------------------------

;; dimensions of traffic light

(define WIDTH 50)
(define HEIGHT 160)
(define BULB-RADIUS 20)
(define BULB-DISTANCE 10)

;; the positions of the bulbs

(define X-BULBS (quotient WIDTH 2))
(define Y-RED (+ BULB-DISTANCE BULB-RADIUS))
(define Y-YELLOW (+ Y-RED BULB-DISTANCE (* 2 BULB-RADIUS)))
(define Y-GREEN (+ Y-YELLOW BULB-DISTANCE (* 2 BULB-RADIUS)))

;; draw the light with the red bulb turned on and switch to green

(start WIDTH HEIGHT)
(draw-solid-disk (make-posn X-BULBS Y-RED) BULB-RADIUS 'red)
(draw-circle (make-posn X-BULBS Y-YELLOW) BULB-RADIUS 'yellow)
(draw-circle (make-posn X-BULBS Y-GREEN) BULB-RADIUS 'green)
(switch 'red 'green)

;; draw the light with the green bulb turned on and switch to yellow

(start WIDTH HEIGHT)
(draw-solid-disk (make-posn X-BULBS Y-GREEN) BULB-RADIUS 'green)
(draw-circle (make-posn X-BULBS Y-RED) BULB-RADIUS 'red)
(draw-circle (make-posn X-BULBS Y-YELLOW) BULB-RADIUS 'yellow)
(switch 'green 'yellow)

;; draw the light with the yellow bulb turned on and switch to red

(start WIDTH HEIGHT)
(draw-solid-disk (make-posn X-BULBS Y-YELLOW) BULB-RADIUS 'yellow)
(draw-circle (make-posn X-BULBS Y-RED) BULB-RADIUS 'red)
(draw-circle (make-posn X-BULBS Y-GREEN) BULB-RADIUS 'green)
(switch 'yellow 'red)
